.wrapper
  .content
    .searchData
      .address
        .introText([style.display]="click == 13 ? 'none' : 'block'") Waves address
        input(type="text", #addressInput="", id="searchDataInp" placeholder="Waves адрес" value='3PAYW61WKGU1PJcn8m9EdDEEgbabsi5DGgw')
      .txsAmount
        .txsAmount__main
          .amountTxsText Last
          input(type="number", #amountTxs="", id="searchDataInp" value='100' max="100000")
          .amountTxsText txs
        .amountTxsText.maxValueText (by default 100 000)
      button(type="button", class="blick_btn search_button", #checkBtn="", (click)="getDataByAddress(addressInput, amountTxs)") Стартуем!
    //- #address
    #goal(*ngFor="let tx of allTxsTest")
      .main([hidden]="current != tx['id']")
        | {{ tx['mister'] }}
        | {{ tx['id'] }}
    #goal([innerHtml]="htmlToAdd")
  .filter(#filter="")
      #search
        .searchData
          .cross
            svg(width="12" height="12")
              path(d="M0 0 L 12 12 M12 0 L 0 12" stroke="black" stroke-width="2")
          input(type="text" id="searchDataInp" class='inspectInput' placeholder="Данные для поиска")
          button(type="button" class="blick_btn inspectBtn") Искать
          button(type="button" class="blick_btn" id='additionalMenu')
            .burg
            .burg
            .burg
      .buttons-form
        #buttons
          ng-container(*ngIf="allTxs")
            button(type="button" class='button' id='balance', #balance="", (click)="test(balance)")
              span(class='bal-btn') Account balance
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="allTxs")
            button(type="button" class='button clickMe' id='all', #all="", (click)="test(all)")
              span(class='all-btn') All ( {{ countAllTxs }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="typeDeposit")
            button(type="button" class='button clickMe' id='deposit', #deposit="", (click)="test(deposit)")
              span(class='dep-btn') Deposit ( {{ countTypeDeposit }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="typeSend")
            button(type="button" class='button clickMe' id='send', #send="", (click)="test(send)")
              span(class='send-btn') Withdraw ( {{ countTypeSend }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type7")
            button(type="button" class='button clickMe' id='7', #id7="", (click)="test(id7)")
              span(class='exch-btn') Trading ( {{ countType7 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type8")
            button(type="button" class='button clickMe' id='8', #id8="", (click)="test(id8)")
              span(class='leasing-btn') Leasing ( {{ countType8 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type9")
            button(type="button" class='button clickMe' id='9', #id9="", (click)="test(id9)")
              span(class='cancLeas-btn') Canceled leasing ( {{ countType9 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="typeMassSend")
            button(type="button" class='button clickMe' id='massSend', #massSend="", (click)="test(massSend)")
              span(class='massSend-btn') Mass withdrawing ( {{ countTypeMassSend }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="typeMassReceive")
            button(type="button" class='button clickMe' id='massReceiv', #balance="", (click)="test(balance)")
              span(class='massReceive-btn') Mass depositing ( {{ countTypeMassReceive }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type3")
            button(type="button" class='button clickMe' id='3', #id3="", (click)="test(id3)")
              span(class='assetCreation-btn') Asset creation ( {{ countType3 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type5")
            button(type="button" class='button clickMe' id='5', #id5="", (click)="test(id5)")
              span(class='assetReissue-btn') Asset reissuing ( {{ countType5 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type6")
            button(type="button" class='button clickMe' id='6', #id6="", (click)="test(id6)")
              span(class='burn-btn') Asset burning ( {{ countType6 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type10")
            button(type="button" class='button clickMe' id='10', #id10="", (click)="test(id10)")
              span(class='alias-btn') Alias cretion  ( {{ countType10 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type12")
            button(type="button" class='button clickMe' id='12', #id12="", (click)="test(id12)")
              span(class='data-btn') Data transaction ( {{ countType12 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type13")
            button(type="button" class='button clickMe' id='13', #id13="", (click)="test(id13)")
              span(class='script-btn') Script transaction ( {{ countType13 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type15")
            button(type="button" class='button clickMe' id='15', #id15="", (click)="test(id15)")
              span(class='assetScript-btn') Asset script ( {{ countType15 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type14")
            button(type="button" class='button clickMe' id='14', #id14="", (click)="test(id14)")
              span(class='sponsor-btn') Sponsorship ( {{ countType14 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type16")
            button(type="button" class='button clickMe' id='16', #id16="", (click)="test(id16)")
              span(class='scriptCall-btn') Invoke script ( {{ countType16 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="type1")
            button(type="button" class='button clickMe' id='1', #id1="", (click)="test(id1)")
              span(class='wavesIss-btn') Waves issuing ( {{ countType1 }} )
              svg(class='svg_button')
                rect(class='rect_button')
          ng-container(*ngIf="typeElse")
            button(type="button" class='button clickMe' id='else', #idElse="", (click)="test(idElse)")
              span(class='else-btn') Else ( {{ countTypeElse }} )
              svg(class='svg_button')
                rect(class='rect_button')
        .extract
          button(type="button" class="extractMe blick_btn" id='csvAll', #balance="", (click)="test(balance)") Экспорт всех транзакци
          button(type="button" class="extractMe blick_btn" id='csvDeposit', #balance="", (click)="test(balance)") Экспорт вводо
          button(type="button" class="extractMe blick_btn" id='csvWithdrawal', #balance="", (click)="test(balance)") Экспорт выводо
          button(type="button" class="extractMe blick_btn" id='csvEx', #balance="", (click)="test(balance)") Экспорт обмено

script(src="index.js")

script.
  $('.content').scroll(function() {
      if ($('.content').scrollTop() > 100) {
          if ($('#upbutton').is(':hidden')) {
              $('#upbutton').css({opacity : 0.8}).fadeIn('slow');
          }
      } else { $('#upbutton').stop(true, false).fadeOut('fast'); }
  });
  $('#upbutton').click(function() {
      $('.content').stop().animate({scrollTop : 0}, 500);
  });
